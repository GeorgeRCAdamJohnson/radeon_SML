{
  "title": "Software engineering",
  "summary": "Software engineering is a branch of both computer science and engineering focused on designing, developing, testing, and maintaining software applications. It involves applying engineering principles and computer programming expertise to develop software systems that meet user needs.",
  "content": "Software engineering Engineering approach to software development .mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" Â· \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"} .mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:var(--background-color-neutral-subtle,#f8f9fa);border:1px solid var(--border-color-base,#a2a9b1);padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:640px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}body.skin--responsive .mw-parser-output .sidebar a>img{max-width:none!important}@media screen{html.skin-theme-clientpref-night .mw-parser-output .sidebar:not(.notheme) .sidebar-list-title,html.skin-theme-clientpref-night .mw-parser-output .sidebar:not(.notheme) .sidebar-title-with-pretitle{background:transparent!important}html.skin-theme-clientpref-night .mw-parser-output .sidebar:not(.notheme) .sidebar-title-with-pretitle a{color:var(--color-progressive)!important}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .sidebar:not(.notheme) .sidebar-list-title,html.skin-theme-clientpref-os .mw-parser-output .sidebar:not(.notheme) .sidebar-title-with-pretitle{background:transparent!important}html.skin-theme-clientpref-os .mw-parser-output .sidebar:not(.notheme) .sidebar-title-with-pretitle a{color:var(--color-progressive)!important}}@media print{body.ns-0 .mw-parser-output .sidebar{display:none!important}} Part of a series on Software development Core activities Data modeling Processes Requirements Design Construction Engineering Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DAD DevOps DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TDD TSP UP XP Supporting disciplines Configuration management Deployment management Documentation Project management Quality assurance User experience Practices ATDD BDD CCO CD CI DDD PP SBE Stand-up TDD Tools Build automation Compiler Debugger GUI builder IDE Infrastructure as code Profiler Release automation UML Modeling Standards and bodies of knowledge CMMI IEEE standards IREB ISO 9001 ISO/IEC standards ITIL OMG PMBOK SWEBOK Glossaries Artificial intelligence Computer science Electrical and electronics engineering Outlines Software development C programming language C sharp programming language C++ programming language Java programming language JavaScript programming language Python programming language Rust programming language .mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}html.skin-theme-clientpref-night .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}}@media print{.mw-parser-output .navbar{display:none!important}} v t e This article is part of a series on Engineering Engineering branches Aerospace engineering Agricultural engineering Architectural engineering Biomedical engineering Chemical engineering Civil engineering Computer engineering Data engineering Design engineer Electrical engineering Electronics engineering Energy engineering Environmental engineering Industrial engineering Manufacturing engineering Marine engineering Materials engineering Mechanical engineering Mechatronics engineering Mining engineering Nuclear engineering Petroleum engineering Process engineering Robotics engineering Software engineering Structural engineering Systems engineering Lists of engineering software Additive manufacturing software Aerospace engineering software Automotive engineering software Bioinformatics software Building information modeling software Chemical engineering software Chemical process simulators EDA software Electromagnetic simulation software Computer-aided engineering software Computer-aided manufacturing software Computational chemistry software Computational fluid dynamics software Data science software Discrete event simulation software Finite element analysis software Free electronics circuits software Gene prediction software Genetic engineering software Geotechnical engineering software Hardware description languages simulators Hydrology software Mathematical software Molecular design software Molecular mechanics modeling software Nanostructures software Nuclear engineering software Nucleic acid simulation software Numerical analysis software Numerical libraries Open-source AI software Open-source libraries Optimization software Power engineering software Programming tools Protein structure prediction software RNA structure prediction software Robotics simulation software Scientific simulation software Sequence alignment software Structural alignment software Structural engineering software System dynamics software Wind energy software Glossary of engineering Glossary of aerospace engineering Glossary of civil engineering Glossary of electrical and electronics engineering Glossary of mechanical engineering Glossary of structural engineering See also Engineering education Engineering ethics Engineering management History of engineering List of engineering awards List of engineering branches List of engineering journals and magazines List of engineering schools List of engineering societies Lists of engineers Outline of engineering Engineering portal Engineering books on Wikibooks v t e Software engineering is a branch of both computer science and engineering focused on designing, developing, testing, and maintaining software applications . [ 1 ] It involves applying engineering principles and computer programming expertise to develop software systems that meet user needs. [ 2 ] [ 3 ] [ 4 ] [ 5 ] The terms programmer and coder overlap software engineer , but they imply only the construction aspect of a typical software engineer workload. [ 6 ] A software engineer applies a software development process , [ 2 ] [ 7 ] which involves defining, implementing, testing , managing , and maintaining software systems, as well as developing the software development process itself. History .mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}@media print{body.ns-0 .mw-parser-output .hatnote{display:none!important}} Main article: History of software engineering Beginning in the 1960s, software engineering was recognized as a separate field of engineering . [ 8 ] The development of software engineering was seen as a struggle. Problems included software that was over budget, exceeded deadlines, required extensive debugging and maintenance, and unsuccessfully met the needs of consumers or was never even completed. In 1968, NATO held the first software engineering conference, where issues related to software were addressed. Guidelines and best practices for the development of software were established. [ 9 ] The origins of the term software engineering have been attributed to various sources. The term appeared in a list of services offered by companies in the June 1965 issue of \"Computers and Automation\" [ 10 ] and was used more formally in the August 1966 issue of Communications of the ACM (Volume 9, number 8) in \"President's Letter to the ACM Membership\" by Anthony A. Oettinger. [ 11 ] [ 12 ] [ 13 ] It is also associated with the title of a NATO conference in 1968 by Professor Friedrich L. Bauer . [ 14 ] Margaret Hamilton described the discipline of \"software engineering\" during the Apollo missions to give what they were doing legitimacy. [ 15 ] At the time, there was perceived to be a \" software crisis \". [ 16 ] [ 17 ] [ 18 ] The 40th International Conference on Software Engineering (ICSE 2018) celebrates 50 years of \"Software Engineering\" with the Plenary Sessions' keynotes of Frederick Brooks [ 19 ] and Margaret Hamilton . [ 20 ] In 1984, the Software Engineering Institute (SEI) was established as a federally funded research and development center headquartered on the campus of Carnegie Mellon University in Pittsburgh, Pennsylvania , United States. [ 21 ] Watts Humphrey founded the SEI Software Process Program, aimed at understanding and managing the software engineering process. [ 21 ] The Process Maturity Levels introduced became the Capability Maturity Model Integration for Development (CMMI-DEV), which defined how the US Government evaluates the abilities of a software development team. Modern, generally accepted best practices for software engineering have been collected by the ISO/IEC JTC 1/SC 7 subcommittee and published as the Software Engineering Body of Knowledge (SWEBOK). [ 7 ] Software engineering is considered one of the major computing disciplines. [ 22 ] In modern systems, where concepts such as Edge Computing , Internet of Things and Cyber-physical Systems are prevalent, software is a critical factor. Thus, software engineering is closely related to the Systems Engineering discipline. The Systems Engineering Body of Knowledge claims: Software is prominent in most modern systems architectures and is often the primary means for integrating complex system components. Software engineering and systems engineering are not merely related disciplines; they are intimately intertwined....Good systems engineering is a key factor in enabling good software engineering. Terminology Definition Notable definitions of software engineering include: \"The systematic application of scientific and technological knowledge, methods, and experience to the design, implementation, testing, and documentation of software.\"âThe Bureau of Labor Statisticsâ IEEE Systems and software engineering â Vocabulary [ 23 ] \"The application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software.\"â IEEE Standard Glossary of Software Engineering Terminology [ 24 ] \"An engineering discipline that is concerned with all aspects of software production.\"â Ian Sommerville [ 25 ] \"The establishment and use of sound engineering principles in order to economically obtain software that is reliable and works efficiently on real machines.\"â Fritz Bauer [ 26 ] \"A branch of computer science that deals with the design, implementation, and maintenance of complex computer programs .\"â Merriam-Webster [ 27 ] \" ' Software engineering' encompasses not just the act of writing code, but all of the tools and processes an organization uses to build and maintain that code over time. [...] Software engineering can be thought of as 'programming integrated over time. ' \" âSoftware Engineering at Google [ 28 ] The term has also been used less formally: as the informal contemporary term for the broad range of activities that were formerly called computer programming and systems analysis [ 29 ] as the broad term for all aspects of the practice of computer programming, as opposed to the theory of computer programming, which is formally studied as a sub-discipline of computer science [ 30 ] as the term embodying the advocacy of a specific approach to computer programming, one that urges that it be treated as an engineering discipline rather than an art or a craft, and advocates the codification of recommended practices [ 31 ] Suitability Individual commentators have disagreed sharply on how to define software engineering or its legitimacy as an engineering discipline. David Parnas has said that software engineering is, in fact, a form of engineering. [ 32 ] [ 33 ] Steve McConnell has said that it is not, but that it should be. [ 34 ] Donald Knuth has said that programming is an art and a science. [ 35 ] Edsger W. Dijkstra claimed that the terms software engineering and software engineer have been misused in the United States. [ 36 ] Workload Main article: Outline of software engineering Requirements analysis Main article: Software requirements Requirements engineering is about elicitation, analysis, specification, and validation of requirements for software . Software requirements can be functional , non-functional or domain. Functional requirements describe expected behaviors (i.e. outputs). Non-functional requirements specify issues like portability, security, maintainability, reliability, scalability, performance, reusability, and flexibility. They are classified into the following types: interface constraints, performance constraints (such as response time, security, storage space, etc.), operating constraints, life cycle constraints (maintainability, portability, etc.), and economic constraints. Knowledge of how the system or software works is needed when it comes to specifying non-functional requirements. Domain requirements have to do with the characteristic of a certain category or domain of projects. [ 37 ] Design Main article: Software design Software design is the process of making high-level plans for the software. Design is sometimes divided into levels: Interface design plans the interaction between a system and its environment as well as the inner workings of the system. Architectural design plans the major components of a system, including their responsibilities, properties, and interfaces between them. Detailed design plans internal elements, including their properties, relationships, algorithms and data structures . [ 38 ] Construction Main article: Software construction Software construction typically involves programming (a.k.a. coding), unit testing , integration testing , and debugging so as to implement the design. [ 2 ] [ 7 ] \"Software testing is related to, but different from, ... debugging\". [ 7 ] Testing Main article: Software testing Software testing is an empirical, technical investigation conducted to provide stakeholders with information about the quality of the software under test. [ 2 ] [ 7 ] Software testing can be viewed as a risk based activity. When described separately from construction, testing typically is performed by test engineers or quality assurance instead of the programmers who wrote it. It is performed at the system level and is considered an aspect of software quality . The testers' goals during the testing process are to minimize the overall number of tests to a manageable set and make well-informed decisions regarding which risks should be prioritized for testing and which can wait. [ 39 ] Program analysis Main article: Program analysis Program analysis is the process of analyzing computer programs with respect to an aspect such as performance , robustness , and security . Maintenance Main article: Software maintenance Software maintenance refers to supporting the software after release. It may include but is not limited to: error correction , optimization, deletion of unused and discarded features, and enhancement of existing features. [ 2 ] [ 7 ] Usually, maintenance takes up 40% to 80% of project cost. [ 40 ] Education .mw-parser-output .ambox{border:1px solid #a2a9b1;border-left:10px solid #36c;background-color:#fbfbfb;box-sizing:border-box}.mw-parser-output .ambox+link+.ambox,.mw-parser-output .ambox+link+style+.ambox,.mw-parser-output .ambox+link+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+style+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+link+.ambox{margin-top:-1px}html body.mediawiki .mw-parser-output .ambox.mbox-small-left{margin:4px 1em 4px 0;overflow:hidden;width:238px;border-collapse:collapse;font-size:88%;line-height:1.25em}.mw-parser-output .ambox-speedy{border-left:10px solid #b32424;background-color:#fee7e6}.mw-parser-output .ambox-delete{border-left:10px solid #b32424}.mw-parser-output .ambox-content{border-left:10px solid #f28500}.mw-parser-output .ambox-style{border-left:10px solid #fc3}.mw-parser-output .ambox-move{border-left:10px solid #9932cc}.mw-parser-output .ambox-protection{border-left:10px solid #a2a9b1}.mw-parser-output .ambox .mbox-text{border:none;padding:0.25em 0.5em;width:100%}.mw-parser-output .ambox .mbox-image{border:none;padding:2px 0 2px 0.5em;text-align:center}.mw-parser-output .ambox .mbox-imageright{border:none;padding:2px 0.5em 2px 0;text-align:center}.mw-parser-output .ambox .mbox-empty-cell{border:none;padding:0;width:1px}.mw-parser-output .ambox .mbox-image-div{width:52px}@media(min-width:720px){.mw-parser-output .ambox{margin:0 10%}}@media print{body.ns-0 .mw-parser-output .ambox{display:none!important}} The examples and perspective in this article may not represent a worldwide view of the subject . You may improve this article , discuss the issue on the talk page , or create a new article , as appropriate. ( November 2010 ) ( Learn how and when to remove this message ) See also: List of software programming journals Top computer science colleges in North America Knowledge of computer programming is a prerequisite for becoming a software engineer. In 2004, the IEEE Computer Society produced the SWEBOK , which has been published as ISO/IEC Technical Report 1979:2005, describing the body of knowledge that they recommend to be mastered by a graduate software engineer with four years of experience. [ 41 ] Many software engineers enter the profession by obtaining a university degree or training at a vocational school. One standard international curriculum for undergraduate software engineering degrees was defined by the Joint Task Force on Computing Curricula of the IEEE Computer Society and the Association for Computing Machinery , and updated in 2014. [ 22 ] A number of universities have Software Engineering degree programs; as of 2010 [ update ] , there were 244 Campus Bachelor of Software Engineering programs, 70 Online programs, 230 Masters-level programs, 41 Doctorate-level programs, and 69 Certificate-level programs in the United States. In addition to university education, many companies sponsor internships for students wishing to pursue careers in information technology. These internships can introduce the student to real-world tasks that typical software engineers encounter every day. Similar experience can be gained through military service in software engineering. Software engineering degree programs A small but growing number of practitioners have software engineering degrees. In 1987, the Department of Computing at Imperial College London introduced the first three-year software engineering bachelor's degree in the world; in the following year, the University of Sheffield established a similar program. [ 42 ] In 1996, the Rochester Institute of Technology established the first software engineering bachelor's degree program in the United States; however, it did not obtain ABET accreditation until 2003, the same year as Rice University , Clarkson University , Milwaukee School of Engineering , and Mississippi State University . [ 43 ] Since then, software engineering undergraduate degrees have been established at many universities. A standard international curriculum for undergraduate software engineering degrees, SE2004 , was defined by a steering committee between 2001 and 2004 with funding from the Association for Computing Machinery and the IEEE Computer Society . As of 2004 [ update ] , about 50 universities in the U.S. offer software engineering degrees, which teach both computer science and engineering principles and practices. The first software engineering master's degree was established at Seattle University in 1979. Since then, graduate software engineering degrees have been made available from many more universities. Likewise in Canada, the Canadian Engineering Accreditation Board (CEAB) of the Canadian Council of Professional Engineers has recognized several software engineering programs. Additionally, many online advanced degrees in Software Engineering have appeared such as the Master of Science in Software Engineering (MSE) degree offered through the Computer Science and Engineering Department at California State University, Fullerton . Steve McConnell opines that because most universities teach computer science rather than software engineering, there is a shortage of true software engineers. [ 44 ] ETS (Ãcole de technologie supÃ©rieure) University and UQAM (UniversitÃ© du QuÃ©bec Ã  MontrÃ©al) were mandated by IEEE to develop the Software Engineering Body of Knowledge ( SWEBOK ), which has become an ISO standard describing the body of knowledge covered by a software engineer. [ 7 ] Profession Main articles: Software engineering professionalism and Regulation and licensure in engineering Legal requirements for the licensing or certification of professional software engineers vary around the world. In the UK, there is no licensing or legal requirement to assume or use the job title Software Engineer. In some areas of Canada, such as Alberta, British Columbia, Ontario, [ 45 ] and Quebec, software engineers can hold the Professional Engineer (P.Eng) designation and/or the Information Systems Professional (I.S.P.) designation. In Europe, Software Engineers can obtain the European Engineer (EUR ING) professional title. Software Engineers can also become professionally qualified as a Chartered Engineer through the British Computer Society . In the United States, the NCEES began offering a Professional Engineer exam for Software Engineering in 2013, thereby allowing Software Engineers to be licensed and recognized. [ 46 ] NCEES ended the exam after April 2019 due to lack of participation. [ 47 ] Mandatory licensing is currently still largely debated, and perceived as controversial. [ 48 ] [ 49 ] The IEEE Computer Society and the ACM , the two main US-based professional organizations of software engineering, publish guides to the profession of software engineering. The IEEE's Guide to the Software Engineering Body of Knowledge â 2004 Version , or SWEBOK , defines the field and describes the knowledge the IEEE expects a practicing software engineer to have. The most current version is SWEBOK v4. [ 7 ] The IEEE also promulgates a \"Software Engineering Code of Ethics\". [ 50 ] Employment The examples and perspective in this United States may not represent a worldwide view of the subject . You may improve this United States , discuss the issue on the talk page , or create a new United States, as appropriate. ( September 2021 ) ( Learn how and when to remove this message ) See also: Software engineering demographics There are an estimated 26.9 million professional software engineers in the world as of 2022, up from 21 million in 2016. [ 51 ] [ 52 ] Many software engineers work as employees or contractors. Software engineers work with businesses, government agencies (civilian or military), and non-profit organizations. Some software engineers work for themselves as freelancers . Some organizations have specialists to perform each of the tasks in the software development process . Other organizations require software engineers to do many or all of them. In large projects, people may specialize in only one role. In small projects, people may fill several or all roles at the same time. Many companies hire interns , often university or college students during a summer break, or externships . Specializations include analysts , architects , developers , testers , technical support , middleware analysts, project managers , software product managers , educators , and researchers . Most software engineers and programmers work 40 hours a week, but about 15 percent of software engineers and 11 percent of programmers worked more than 50 hours a week in 2008. [ 53 ] Potential injuries in these occupations are possible because like other workers who spend long periods sitting in front of a computer terminal typing at a keyboard, engineers and programmers are susceptible to eyestrain, back discomfort, Thrombosis , Obesity , and hand and wrist problems such as carpal tunnel syndrome . [ 54 ] United States The U. S. Bureau of Labor Statistics (BLS) counted 1,365,500 software developers holding jobs in the U.S. in 2018. [ 55 ] Due to its relative newness as a field of study, formal education in software engineering is often taught as part of a computer science curriculum, and many software engineers hold computer science degrees. [ 56 ] The BLS estimates 2024 to 2034 the growth for software engineers is 15% which is lesser than their prediction from 2023 to 2033 that computer software engineering would increase by 17%. [ 57 ] This is down from the 2022 to 2032 BLS estimate of 25% for software engineering. [ 57 ] [ 58 ] And, is further down from their 30% 2010 to 2020 BLS estimate. [ 59 ] Due to this trend, job growth may not be as fast as during the last decade, as jobs that would have gone to computer software engineers in the United States would instead be outsourced to computer software engineers in countries such as India and other foreign countries. [ 60 ] [ 53 ] In addition, the BLS Job Outlook for Computer Programmers, the U.S. Bureau of Labor Statistics (BLS) Occupational Outlook predicts a decline of -7 percent from 2016 to 2026, a further decline of -9 percent from 2019 to 2029, a decline of -10 percent from 2021 to 2031. [ 60 ] and then a decline of -11 percent from 2022 to 2032. [ 60 ] Currently their prediction for 2024 to 2034 is a decline of -6 percent. Since computer programming can be done from anywhere in the world, companies sometimes hire programmers in countries where wages are lower. [ 60 ] [ 61 ] [ 62 ] Furthermore, the ratio of women in many software fields has also been declining over the years as compared to other engineering fields. [ 63 ] Then there is the additional concern that recent advances in Artificial Intelligence might impact the demand for future generations of Software Engineers. [ 64 ] [ 65 ] [ 66 ] [ 67 ] [ 68 ] [ 69 ] [ 70 ] However, this trend may change or slow in the future as many current software engineers in the U.S. market flee the profession or age out of the market in the next few decades. [ 60 ] [ 71 ] Certification The Software Engineering Institute offers certifications on specific topics like security , process improvement and software architecture . [ 72 ] IBM , Microsoft and other companies also sponsor their own certification examinations. Many IT certification programs are oriented toward specific technologies, and managed by the vendors of these technologies. [ 73 ] These certification programs are tailored to the institutions that would employ people who use these technologies. Broader certification of general software engineering skills is available through various professional societies. As of 2006 [ update ] , the IEEE had certified over 575 software professionals as a Certified Software Development Professional (CSDP). [ 74 ] In 2008 they added an entry-level certification known as the Certified Software Development Associate (CSDA). [ 75 ] The ACM and the IEEE Computer Society together examined the possibility of licensing of software engineers as Professional Engineers in the 1990s, but eventually decided that such licensing was inappropriate for the professional industrial practice of software engineering. [ 48 ] John C. Knight and Nancy G. Leveson presented a more balanced analysis of the licensing issue in 2002. [ 49 ] In the U.K. the British Computer Society has developed a legally recognized professional certification called Chartered IT Professional (CITP) , available to fully qualified members ( MBCS ). Software engineers may be eligible for membership of the British Computer Society or Institution of Engineering and Technology and so qualify to be considered for Chartered Engineer status through either of those institutions. In Canada the Canadian Information Processing Society has developed a legally recognized professional certification called Information Systems Professional (ISP) . [ 76 ] In Ontario, Canada, Software Engineers who graduate from a Canadian Engineering Accreditation Board (CEAB) accredited program, successfully complete PEO's ( Professional Engineers Ontario ) Professional Practice Examination (PPE) and have at least 48 months of acceptable engineering experience are eligible to be licensed through the Professional Engineers Ontario and can become Professional Engineers P.Eng. [ 77 ] The PEO does not recognize any online or distance education however; and does not consider Computer Science programs to be equivalent to software engineering programs despite the tremendous overlap between the two. This has sparked controversy and a certification war. It has also held the number of P.Eng holders for the profession exceptionally low. The vast majority of working professionals in the field hold a degree in CS, not SE. Given the difficult certification path for holders of non-SE degrees, most never bother to pursue the license. Impact of globalization The initial impact of outsourcing, and the relatively lower cost of international human resources in developing third world countries led to a massive migration of software development activities from corporations in North America and Europe to India and later: China, Russia, and other developing countries. This approach had some flaws, mainly the distance / time zone difference that prevented human interaction between clients and developers and the massive job transfer. This had a negative impact on many aspects of the software engineering profession. For example, some students in the developed world avoid education related to software engineering because of the fear of offshore outsourcing (importing software products or services from other countries) and of being displaced by foreign visa workers . [ 78 ] Additionally, the glut of high-tech workers has lead to a wider adoption of the 996 working hour system and â007â schedules as the expected work load. [ 79 ] Although statistics do not currently show a threat to software engineering itself; a related career, computer programming does appear to have been affected. [ 80 ] Nevertheless, the ability to smartly leverage offshore and near-shore resources via the follow-the-sun workflow has improved the overall operational capability of many organizations. [ 81 ] When North Americans leave work, Asians are just arriving to work. When Asians are leaving work, Europeans arrive to work. This provides a continuous ability to have human oversight on business-critical processes 24 hours per day, without paying overtime compensation or disrupting a key human resource, sleep patterns. While global outsourcing has several advantages, global â and generally distributed â development can run into serious difficulties resulting from the distance between developers. This is due to the key elements of this type of distance that have been identified as geographical, temporal, cultural and communication (that includes the use of different languages and dialects of English in different locations). [ 82 ] Research has been carried out in the area of global software development over the last 15 years and an extensive body of relevant work published that highlights the benefits and problems associated with the complex activity. As with other aspects of software engineering research is ongoing in this and related areas. Prizes There are various prizes in the field of software engineering: ACM-AAAI Allen Newell Award - USA. Awarded to career contributions that have breadth within computer science, or that bridge computer science and other disciplines. BCS Lovelace Medal . Awarded to individuals who have made outstanding contributions to the understanding or advancement of computing. ACM SIGSOFT Outstanding Research Award, selected for individual(s) who have made \" significant and lasting research contributions to the theory or practice of software engineering.\" [ 83 ] More ACM SIGSOFT Awards. [ 84 ] The Codie award , a yearly award issued by the Software and Information Industry Association for excellence in software development within the software industry. Harlan Mills Award for \"contributions to the theory and practice of the information sciences, focused on software engineering\". ICSE Most Influential Paper Award. [ 85 ] Jolt Award , also for the software industry. Stevens Award given in memory of Wayne Stevens. Criticism Some call for licensing, certification and codified bodies of knowledge as mechanisms for spreading the engineering knowledge and maturing the field. [ 86 ] Some claim that the concept of software engineering is so new that it is rarely understood, and it is widely misinterpreted, including in software engineering textbooks, papers, and among the communities of programmers and crafters. [ 87 ] Some claim that a core issue with software engineering is that its approaches are not empirical enough because a real-world validation of approaches is usually absent, or very limited and hence software engineering is often misinterpreted as feasible only in a \"theoretical environment.\" [ 87 ] Edsger Dijkstra , a founder of many of the concepts in software development today, rejected the idea of \"software engineering\" up until his death in 2002, arguing that those terms were poor analogies for what he called the \"radical novelty\" of computer science : {{cite web | url=http://www.cs.utexas.edu/~EWD/transcriptions/EWD10xx/EWD1036.html| title=On the cruelty of really teaching computing science| last = Dijkstra| first = E. W.| author-link = Edsger Dijkstra| year=1988 | access-date=2014-01-10}}&lt;/ref>\"}},\"i\":0}}]}' id=\"mwAvw\">.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 32px}.mw-parser-output .templatequotecite{line-height:1.5em;text-align:left;margin-top:0}@media(min-width:500px){.mw-parser-output .templatequotecite{padding-left:1.6em}} A number of these phenomena have been bundled under the name \"Software Engineering\". As economics is known as \"The Miserable Science\", software engineering should be known as \"The Doomed Discipline\", doomed because it cannot even approach its goal since its goal is self-contradictory. Software engineering, of course, presents itself as another worthy cause, but that is eyewash: if you carefully read its literature and analyse what its devotees actually do, you will discover that software engineering has accepted as its charter \"How to program if you cannot.\" [ 88 ] See also .mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:var(--background-color-interactive-subtle,#f8f9fa);color:inherit;display:flow-root}.mw-parser-output .infobox .side-box{font-size:100%}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1;min-width:0}}@media(min-width:640px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}} @media print{body.ns-0 .mw-parser-output .sistersitebox{display:none!important}}@media screen{html.skin-theme-clientpref-night .mw-parser-output .sistersitebox img[src*=\"Wiktionary-logo-en-v2.svg\"]{filter:invert(1)brightness(55%)contrast(250%)hue-rotate(180deg)}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .sistersitebox img[src*=\"Wiktionary-logo-en-v2.svg\"]{filter:invert(1)brightness(55%)contrast(250%)hue-rotate(180deg)}} .mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0} Wikimedia Commons has media related to Software engineers . Study and practice Computer science Data engineering Software craftsmanship Software development Release engineering Roles Programmer Systems analyst Systems architect Professional aspects Bachelor of Science in Information Technology Bachelor of Software Engineering List of software engineering conferences List of computer science journals (including software engineering journals) List of software programming journals Lists of programming software development tools Software Engineering Institute References Citations .mw-parser-output .reflist{margin-bottom:0.5em;list-style-type:decimal}@media screen{.mw-parser-output .reflist{font-size:90%}}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman} â .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}} \"What is Software Engineering?\" . Michigan Technological University . Retrieved 2025-06-29 . 1 2 3 4 5 Abran et al. 2004 harvnb error: no target: CITEREFAbranMooreBourqueDupuis2004 ( help ) â ACM (2007). \"Computing Degrees &amp; Careers\" . ACM. Archived from the original on 2011-06-17 . Retrieved 2010-11-23 . â Laplante, Phillip (2007). What Every Engineer Should Know about Software Engineering . Boca Raton: CRC. ISBN 978-0-8493-7228-5 . Retrieved 2011-01-21 . â \"What Does a Software Engineer Do?\" . coursera . Oct 31, 2022. â Bogost, Ian (5 November 2015). \"Programmers: Stop Calling Yourselves Engineers\" . The Atlantic . 1 2 3 4 5 6 7 8 Bourque, Pierre; Fairley, Richard E. (Dick), eds. (2014). Guide to the Software Engineering Body of Knowledge Version 3.0 (SWEBOK) . IEEE Computer Society . â Farone, Alison (2020-08-04). \"The history of coding and software engineering\" . Hack Reactor . Retrieved 2025-06-29 . â \"The history of coding and software engineering\" . www.hackreactor.com . Archived from the original on 2022-03-24 . Retrieved 2021-05-06 . â \"Computers and Automation: The Computer Directory and Buyers' Guide, 1965\" (PDF) . bitsavers.org . Retrieved 15 July 2023 . â \"President's Letter to the ACM Membership\" (PDF) . Retrieved 27 February 2025 . We must recognize ourselves -- not necessarily all of us, and not necessarily any one of us all the time -- as members of an engineering profession, be it hardware engineering or software engineering, a profession without artificial and irrelevant boundaries like that between \"scientific\" and \"business\" applications. â Oettinger, A. G. (1966). \"President's Letter to the ACM Membership\" . Commun. ACM . 9 (8). Association for Computing Machinery: 545â 546. doi : 10.1145/365758.3291288 . ISSN 0001-0782 . S2CID 53432801 . â \"The origin of \"software engineering\" \" . 4 April 2013 . Retrieved 17 November 2017 . â Randall, Brian. \"The 1968/69 NATO Software Engineering Reports\" . Retrieved 17 November 2017 . â Lori Cameron (October 5, 2008). \"Margaret Hamilton: First Software Engineer\" . Tech News . IEEE Computer Society . â Ian Sommerville (March 24, 2015). Software Engineering (10th ed.). Pearson Education Limited. ISBN 978-0-13-394303-0 . â Peter, Naur; Randell, Brian (7â11 October 1968). Software Engineering: Report of a conference sponsored by the NATO Science Committee (PDF) . Garmisch, Germany: Scientific Affairs Division, NATO . Retrieved 2008-12-26 . â Randell, Brian (10 August 2001). \"The 1968/69 NATO Software Engineering Reports\" . Brian Randell's University Homepage . The School of the Computer Sciences, Newcastle University . Retrieved 2008-10-11 . The idea for the first NATO Software Engineering Conference, and in particular that of adopting the then practically unknown term \"software engineering\" as its (deliberately provocative) title, I believe came originally from Professor Fritz Bauer . â 2018 International Conference on Software Engineering celebrating its 40th anniversary, and 50 years of Software engineering (31 May 2018). \"ICSE 2018 â Plenary Sessions â Fred Brooks\" . YouTube . Retrieved 9 August 2018 . {{ cite web }} : CS1 maint: numeric names: authors list ( link ) â 2018 International Conference on Software Engineering celebrating its 40th anniversary, and 50 years of Software engineering (31 May 2018). \"ICSE 2018 â Plenary Sessions â Margaret Hamilton\" . YouTube . Retrieved 9 August 2018 . {{ cite web }} : CS1 maint: numeric names: authors list ( link ) 1 2 Linda Hutz Pesante (January 1, 2003). Anthony Ralston; Edwin D. Reilly (eds.). \"Software engineering institute (SEI)\" . Encyclopedia of Computer Science . Chichester , West Sussex, UK: John Wiley and Sons Ltd. : 1611â 1613. ISBN 978-0-470-86412-8 . (1) The institute was competitively awarded to Carnegie Mellon in December 1984 by the US Department of Defense (DoD) to improve the state of the practice of software engineering. ... (2) the SEI moves mature solutions of proven value into widespread use; examples include the Capability Maturity Model (CMM) ... 1 2 Joint Task Force on Computing Curricula, IEEE Computer Society , Association for Computing Machinery (23 February 2015). Software Engineering 2014: Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering (PDF) . A Volume of the Computing Curricula Series. IEEE Computer Society and Association for Computing Machinery . {{ cite book }} : CS1 maint: multiple names: authors list ( link ) â Systems and software engineering â Vocabulary , ISO / IEC / IEEE std 24765:2010(E), 2010. â IEEE Standard Glossary of Software Engineering Terminology , IEEE std 610.12-1990, 1990. â 1. &apos;&apos;Engineering discipline&apos;&apos; Engineers make things work. They apply theories, methods and tools where these are appropriate [. . .] Engineers also recognize that they must work to organizational and financial constraints. [. . .]&lt;br /> 2. &apos;&apos;All aspects of software production&apos;&apos; Software engineering is not just concerned with the technical processes of software development but also with activities such as software project management and with the development of tools, methods and theories to support software production.\"}},\"i\":0}}]}' id=\"mwBFU\"/> Sommerville, Ian (2007) [1982]. \"1.1.2 What is software engineering?\" . Software Engineering (8th ed.). Harlow, England: Pearson Education. p. 7. ISBN 978-0-321-31379-9 . Software engineering is an engineering discipline that is concerned with all aspects of software production from the early stages of system specification to maintaining the system after it has gone into use. In this definition, there are two key phrases: 1. Engineering discipline Engineers make things",
  "cached_at": "2025-10-25T19:36:28.639544"
}